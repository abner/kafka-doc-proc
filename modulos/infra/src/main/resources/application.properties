quarkus.http.host=0.0.0.0

quarkus.datasource.db-kind=postgresql
# Em desenvolvimento e teste, se estes valores não estão definidos
# o Quarkus sobe um banco Postgres 13 em um container docker
# se o docker estiver instalado
#quarkus.datasource.username=docsystem
#quarkus.datasource.password=docsystem
#quarkus.datasource.reactive.url=vertx-reactive:postgresql://localhost:5432/docsystem

## SUBMISSAO DO DOCUMENTO
docsystem.nome_canal_submissao_documento=docsystem.submissao-documento
## Canal de envio (outgoing) para topico docsystem.submissao-documento
mp.messaging.outgoing.submissao-documento.connector=smallrye-kafka
mp.messaging.outgoing.submissao-documento.topic=${docsystem.nome_canal_submissao_documento}
mp.messaging.outgoing.submissao-documento.waitForWriteCompletion=false

## Canal de recepção do tópico docsystem-submissao-documento
mp.messaging.incoming.recepcao-submissao-documento.connector=smallrye-kafka
mp.messaging.incoming.recepcao-submissao-documento.topic=${docsystem.nome_canal_submissao_documento}
mp.messaging.incoming.recepcao-submissao-documento.enable.auto.commit=false
mp.messaging.incoming.recepcao-submissao-documento.auto.offset.reset=earliest
mp.messaging.incoming.recepcao-submissao-documento.value.deserializer=io.abner.docsystem.recepcao.serialization.SubmissaoDocumentoDesserializer
## NOTIFICACAO DE SUBMISSAO PROCESSADA
docsystem.nome_canal_notificacao=docsystem.notificacao-resultado-submissao
## Canal de envio (outgoing) para topico docsystem.notificacao-resultado-submissao
mp.messaging.outgoing.notificacao-resultado-submissao.connector=smallrye-kafka
mp.messaging.outgoing.notificacao-resultado-submissao.topic=${docsystem.nome_canal_notificacao}
## Canal de recepção do tópico docsystem-notificacao-resultado-submissao
mp.messaging.incoming.recepcao-notificacao-resultado-submissao.connector=smallrye-kafka
mp.messaging.incoming.recepcao-notificacao-resultado-submissao.topic=${docsystem.nome_canal_notificacao}



#mp.messaging.outgoing.submissao-documento.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
#mp.messaging.incoming.recepcao-submissao-documento.value.deserializer=io.abner.docsystem.recepcao.serialization.SubmissaoDocumentoDesserializer
#mp.messaging.incoming.recepcao-notificacao-resultado-submissao.value.deserializer=io.abner.docsystem.recepcao.serialization.ResultadoSubmissaoDocumentoDesserializer
#mp.messaging.outgoing.notificacao-resultado-submissao.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
